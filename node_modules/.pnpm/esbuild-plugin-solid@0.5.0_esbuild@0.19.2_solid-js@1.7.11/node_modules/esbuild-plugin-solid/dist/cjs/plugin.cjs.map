{
  "version": 3,
  "sources": ["../../src/plugin.ts"],
  "sourcesContent": ["import { parse } from \"path\";\r\nimport { Plugin } from \"esbuild\";\r\nimport { readFile } from \"fs/promises\";\r\nimport { transformAsync, TransformOptions } from \"@babel/core\";\r\n// @ts-ignore\r\nimport solid from \"babel-preset-solid\";\r\n// @ts-ignore\r\nimport ts from \"@babel/preset-typescript\";\r\n\r\n// These options are partly taken from vite-plugin-solid:\r\n\r\n/** Configuration options for esbuild-plugin-solid */\r\nexport interface Options {\r\n  /** The options to use for @babel/preset-typescript @default {} */\r\n  typescript?: object\r\n  /**\r\n   * Pass any additional babel transform options. They will be merged with\r\n   * the transformations required by Solid.\r\n   *\r\n   * @default {}\r\n   */\r\n  babel?:\r\n    | TransformOptions\r\n    | ((source: string, id: string, ssr: boolean) => TransformOptions)\r\n    | ((source: string, id: string, ssr: boolean) => Promise<TransformOptions>);\r\n  /**\r\n   * Pass any additional [babel-plugin-jsx-dom-expressions](https://github.com/ryansolid/dom-expressions/tree/main/packages/babel-plugin-jsx-dom-expressions#plugin-options).\r\n   * They will be merged with the defaults sets by [babel-preset-solid](https://github.com/solidjs/solid/blob/main/packages/babel-preset-solid/index.js#L8-L25).\r\n   *\r\n   * @default {}\r\n   */\r\n  solid?: {\r\n    /**\r\n     * The name of the runtime module to import the methods from.\r\n     *\r\n     * @default \"solid-js/web\"\r\n     */\r\n    moduleName?: string;\r\n\r\n    /**\r\n     * The output mode of the compiler.\r\n     * Can be:\r\n     * - \"dom\" is standard output\r\n     * - \"ssr\" is for server side rendering of strings.\r\n     * - \"universal\" is for using custom renderers from solid-js/universal\r\n     *\r\n     * @default \"dom\"\r\n     */\r\n    generate?: 'ssr' | 'dom' | 'universal';\r\n\r\n    /**\r\n     * Indicate whether the output should contain hydratable markers.\r\n     *\r\n     * @default false\r\n     */\r\n    hydratable?: boolean;\r\n\r\n    /**\r\n     * Boolean to indicate whether to enable automatic event delegation on camelCase.\r\n     *\r\n     * @default true\r\n     */\r\n    delegateEvents?: boolean;\r\n\r\n    /**\r\n     * Boolean indicates whether smart conditional detection should be used.\r\n     * This optimizes simple boolean expressions and ternaries in JSX.\r\n     *\r\n     * @default true\r\n     */\r\n    wrapConditionals?: boolean;\r\n\r\n    /**\r\n     * Boolean indicates whether to set current render context on Custom Elements and slots.\r\n     * Useful for seemless Context API with Web Components.\r\n     *\r\n     * @default true\r\n     */\r\n    contextToCustomElements?: boolean;\r\n\r\n    /**\r\n     * Array of Component exports from module, that aren't included by default with the library.\r\n     * This plugin will automatically import them if it comes across them in the JSX.\r\n     *\r\n     * @default [\"For\",\"Show\",\"Switch\",\"Match\",\"Suspense\",\"SuspenseList\",\"Portal\",\"Index\",\"Dynamic\",\"ErrorBoundary\"]\r\n     */\r\n    builtIns?: string[];\r\n  };\r\n}\r\n\r\nexport function solidPlugin(options?: Options): Plugin {\r\n  return {\r\n    name: \"esbuild:solid\",\r\n\r\n    setup(build) {\r\n      build.onLoad({ filter: /\\.(t|j)sx$/ }, async (args) => {\r\n        const source = await readFile(args.path, { encoding: \"utf-8\" });\r\n\r\n        const { name, ext } = parse(args.path);\r\n        const filename = name + ext;\r\n\r\n        const result = await transformAsync(source, {\r\n          presets: [[solid, options?.solid ?? {}], [ts, options?.typescript ?? {}]],\r\n          filename,\r\n          sourceMaps: \"inline\",\r\n          ...(options?.babel ?? {})\r\n        });\r\n\r\n        if (result?.code === undefined || result.code === null) {\r\n          throw new Error(\"No result was provided from Babel\");\r\n        }\r\n\r\n        return { contents: result.code, loader: \"js\" };\r\n      });\r\n    },\r\n  };\r\n}\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAsB;AAEtB,sBAAyB;AACzB,kBAAiD;AAEjD,gCAAkB;AAElB,+BAAe;AAmFR,SAAS,YAAY,SAA2B;AACrD,SAAO;AAAA,IACL,MAAM;AAAA,IAEN,MAAM,OAAO;AACX,YAAM,OAAO,EAAE,QAAQ,aAAa,GAAG,OAAO,SAAS;AACrD,cAAM,SAAS,UAAM,0BAAS,KAAK,MAAM,EAAE,UAAU,QAAQ,CAAC;AAE9D,cAAM,EAAE,MAAM,IAAI,QAAI,mBAAM,KAAK,IAAI;AACrC,cAAM,WAAW,OAAO;AAExB,cAAM,SAAS,UAAM,4BAAe,QAAQ;AAAA,UAC1C,SAAS,CAAC,CAAC,0BAAAA,SAAO,SAAS,SAAS,CAAC,CAAC,GAAG,CAAC,yBAAAC,SAAI,SAAS,cAAc,CAAC,CAAC,CAAC;AAAA,UACxE;AAAA,UACA,YAAY;AAAA,UACZ,GAAI,SAAS,SAAS,CAAC;AAAA,QACzB,CAAC;AAED,YAAI,QAAQ,SAAS,UAAa,OAAO,SAAS,MAAM;AACtD,gBAAM,IAAI,MAAM,mCAAmC;AAAA,QACrD;AAEA,eAAO,EAAE,UAAU,OAAO,MAAM,QAAQ,KAAK;AAAA,MAC/C,CAAC;AAAA,IACH;AAAA,EACF;AACF;",
  "names": ["solid", "ts"]
}
